{"version":3,"sources":["PersonForm.js","Persons.js","Search.js","services/databaseModule.js","Notification.js","App.js","index.js"],"names":["PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Persons","filteredPersons","removePerson","map","person","name","number","onClick","id","Search","search","handleSearchChange","baseUrl","axios","get","then","response","data","newObject","post","delete","updatedObject","put","Notification","notification","message","status","className","App","useState","persons","setPersons","setNewName","setNewNumber","setSearch","setNotification","filter","toLowerCase","includes","useEffect","phonebookService","initialPersons","showNotification","setTimeout","clearNotification","event","target","preventDefault","personObject","existingPerson","find","window","confirm","p","catch","error","returnedPersons","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90ed7a1a.chunk.js","sourcesContent":["const PersonForm = ({\r\n  addPerson,\r\n  newName,\r\n  newNumber,\r\n  handleNameChange,\r\n  handleNumberChange,\r\n}) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name:\r\n        <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input type=\"number\" value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","const Persons = ({ filteredPersons, removePerson }) => {\r\n  return (\r\n    <>\r\n      <h2>Numbers</h2>\r\n      <ul>\r\n        {filteredPersons.map((person) => (\r\n          <li key={person.id}>\r\n            {person.name} {person.number}{\" \"}\r\n            <button onClick={() => removePerson(person)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","const Search = ({ search, handleSearchChange }) => {\r\n  return (\r\n    <div>\r\n      Search:\r\n      <input value={search} onChange={handleSearchChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (updatedObject) => {\r\n  const request = axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, remove, update };\r\n","import React from \"react\";\r\nimport \"./notification.css\";\r\n\r\nexport const Notification = ({ notification }) => {\r\n  const { message, status } = notification;\r\n  if (message === \"\") {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={status}>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PersonForm from \"./PersonForm\";\r\nimport Persons from \"./Persons\";\r\nimport Search from \"./Search\";\r\nimport phonebookService from \"./services/databaseModule\";\r\nimport { Notification } from \"./Notification\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [notification, setNotification] = useState({\r\n    message: \"\",\r\n    status: \"\",\r\n  });\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    };\r\n\r\n    const existingPerson = persons.find((person) => person.name === newName);\r\n\r\n    if (existingPerson) {\r\n      if (\r\n        window.confirm(\r\n          `${personObject.name} is already added, do you want to update?`\r\n        )\r\n      ) {\r\n        personObject.id = existingPerson.id;\r\n        phonebookService.update(personObject).then((response) => {\r\n          setPersons(\r\n            persons.map((p) =>\r\n              p.name === personObject.name ? personObject : p\r\n            )\r\n          ).catch((error) => {\r\n            showNotification(\"success\", `${personObject.name} was updated!`);\r\n          });\r\n        });\r\n      }\r\n    } else {\r\n      phonebookService.create(personObject).then((returnedPersons) => {\r\n        setPersons(persons.concat(returnedPersons));\r\n        setNewName(\"\");\r\n        setNewNumber(\"\");\r\n        showNotification(\"success\", `${newName} added successfully`);\r\n      });\r\n    }\r\n  };\r\n\r\n  const removePerson = (person) => {\r\n    if (window.confirm(`Do you really want to delete ${person.name}`)) {\r\n      phonebookService\r\n        .remove(person.id)\r\n        .then((response) => {\r\n          setPersons(persons.filter((p) => p.id !== person.id));\r\n          console.log(persons);\r\n          showNotification(\"success\", `${person.name} deleted successfully`);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          showNotification(\"error\", `Error deleting person`);\r\n        });\r\n    }\r\n  };\r\n\r\n  const filteredPersons = persons.filter((person) =>\r\n    person.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  useEffect(() => {\r\n    phonebookService.getAll().then((initialPersons) => {\r\n      setPersons(initialPersons);\r\n    });\r\n  }, []);\r\n\r\n  const showNotification = (status, message) => {\r\n    setNotification({ status, message });\r\n    setTimeout(() => {\r\n      clearNotification();\r\n    }, 3000);\r\n  };\r\n  const clearNotification = () => {\r\n    setNotification({ status: \"\", message: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      <Search search={search} handleSearchChange={handleSearchChange} />\r\n      <h3>Add a new number</h3>\r\n      <PersonForm\r\n        addPerson={addPerson}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n      <Persons filteredPersons={filteredPersons} removePerson={removePerson} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}